image: quay.io/pypa/manylinux2010_x86_64

stages:
- prebuild
- build
- publish

variables:
  CBC_VERSION: 2.10.3

#
# Build Stages
#
.build:  &build
  stage: build
  script: 
  # Install CBC from bintray
  #- mkdir Cbc && cd Cbc && pwd
  #- wget https://bintray.com/coin-or/download/download_file?file_path=$CBC_FILE -O $CBC_FILE
  #- if [[ "$CBC_FILE" == *.zip ]]; then unzip $CBC_FILE; else tar -zxvf $CBC_FILE; fi
  #- cd .. && pwd
  - for FILE in patches/*.diff; do patch -p1 < $FILE; done
  # Compile python module
  - $PYTHON_ENV/bin/python setup.py build_ext --swig="${SWIG:-swig-4.0.0/swig}" --swig-opts="-doxygen -c++ -I./Cbc/include/coin/" -I./Cbc/include/coin/ -L./Cbc/lib/
  # Build package
  - $PYTHON_ENV/bin/pip install wheel --upgrade
  - $PYTHON_ENV/bin/python setup.py bdist_wheel
  # Convert to manylinux
  - auditwheel repair dist/*.whl
  # Test the packages
  - $PYTHON_ENV/bin/pip install wheelhouse/*.whl
  - $PYTHON_ENV/bin/python -m cbcpy
  artifacts:
    paths:
    - wheelhouse

.buildlinux:  &buildlinux
  <<: *build
  dependencies:
  - build_cbc_x86_64_linux
  before_script:
  # Install SWIG
  - yum install -y wget pcre-devel
  - wget https://sourceforge.net/projects/swig/files/swig/swig-4.0.0/swig-4.0.0.tar.gz
  - tar -zxvf swig-4.0.0.tar.gz
  - cd swig-4.0.0
  - ./configure && make && make install
  - cd .. && pwd
  

.buildwin:  &buildwin
  <<: *build
  before_script:
  # Install CBC
  - export CBC_FILE=Cbc-$CBC_VERSION-win32-msvc9.zip
  - mkdir Cbc && cd Cbc
  - wget https://bintray.com/coin-or/download/download_file?file_path=$CBC_FILE -O $CBC_FILE
  - unzip $CBC_FILE
  - cd .. && pwd
  # Install SWIG
  - wget https://sourceforge.net/projects/swig/files/swigwin/swigwin-4.0.0/swigwin-4.0.0.zip
  - unzip swigwin-4.0.0.zip
  dependencies: []

#
# Build CBC & SWIG
#
build_cbc_x86_64_linux:
  stage: prebuild
  image: quay.io/pypa/manylinux2010_x86_64
  script:
  - yum install -y wget
  - mkdir Cbc && cd Cbc
  - wget https://www.coin-or.org/download/source/Cbc/Cbc-$CBC_VERSION.tgz
  - tar -zxvf Cbc-$CBC_VERSION.tgz --strip 1
  - ./configure --disable-shared -with-pic
  - make
  - make install
  artifacts:
    paths:
    - Cbc/lib
    - Cbc/include

#
# Build python
#
build_cp27-cp27m_x86_64_linux:
  <<: *buildlinux
  variables:
    PYTHON_ENV: /opt/python/cp27-cp27m
    
build_cp27-cp27mu_x86_64_linux: 
  <<: *buildlinux
  variables:
    PYTHON_ENV: /opt/python/cp27-cp27mu
    
build_cp34-cp34m_x86_64_linux: 
  <<: *buildlinux
  variables:
    PYTHON_ENV: /opt/python/cp34-cp34m
    
build_cp35-cp35m_x86_64_linux: 
  <<: *buildlinux
  variables:
    PYTHON_ENV: /opt/python/cp35-cp35m

build_cp36-cp36m_x86_64_linux: 
  <<: *buildlinux
  variables:
    PYTHON_ENV: /opt/python/cp36-cp36m
    
build_cp37-cp37m_x86_64_linux: 
  <<: *buildlinux
  variables:
    PYTHON_ENV: /opt/python/cp37-cp37m

build_py27_win32_msvc9: 
  <<: *buildwin
  image: ikus060/docker-python:2.7-vc2008express
  allow_failure: true
  variables:
    SWIG: swigwin-4.0.0/swig.exe
    PYTHON_ENV: /usr/
  
#
# Publish manylinux packages
#

publish_nexus:
  stage: publish
  image: python:3
  script:
  - pip install twine --upgrade
  - python setup.py sdist
  - twine upload wheelhouse/* -u $NEXUS_USR -p $NEXUS_PWD --repository-url $NEXUS_PYPI_URL

publish_pypi:
  stage: publish
  image: python:3
  only:
  - tags
  script:
  - pip3 install twine --upgrade
  - python setup.py sdist
  - twine upload wheelhouse/* -u $PYPI_USR -p $PYPI_PWD
  