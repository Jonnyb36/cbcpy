stages:
- prebuild
- build
- publish

variables:
  CBCURL: https://github.com/ikus060/Cbc
  COINBREWURL: https://raw.githubusercontent.com/coin-or/coinbrew/42bc4ddd6698c7cd6a154147852522f2e061d1c7/coinbrew

# TODO We should probably fix the version and not use master HERE.

#
# Build Stages.
#

.build:  &build
  stage: build
  before_script: 
  # Install SWIG
  - wget https://sourceforge.net/projects/swig/files/swig/swig-4.0.0/swig-4.0.0.tar.gz
  - tar -zxvf swig-4.0.0.tar.gz
  - cd swig-4.0.0
  - ./configure && make && make install
  - cd ..
  script: 
  - apt update && apt install -y gfortran
  # Install & Compile CBC
  - wget $COINBREWURL
  - bash ./coinbrew fetch $CBCURL --no-prompt --no-third-party
  - bash ./coinbrew build Cbc --no-prompt --disable-shared --with-pic --host=$TARGET
  # Compile python module
  - python setup.py build_ext --swig-opts="-c++ -I./build/include/coin/" -I./build/include/coin/ -L./build/lib/
  # Build package
  - python -m pip install wheel --upgrade
  - python setup.py bdist_wheel
  artifacts:
    paths:
    - dist
    
.build_win:  &build_win
  before_script: 
  # Install SWIG
  - wget https://sourceforge.net/projects/swig/files/swigwin/swigwin-4.0.0/swigwin-4.0.0.zip
  - unzip swigwin-4.0.0.zip
  # Install missing stdint.h
  - cp msvc/include/* "/vc2008express/drive_c/Program Files/Microsoft Visual Studio 9.0/VC/include/"
  # Install mingw
  - apt update && apt install -y g++-mingw-w64-i686 gcc-mingw-w64-i686  g++-mingw-w64-x86-64  gcc-mingw-w64-x86-64

build_py2_x86_64_linux:
  <<: *build
  image: python:2
  variables:
    TARGET: x86_64-linux-gnu
    
build_py35_x86_64_linux: 
  <<: *build
  image: python:3.5
  variables:
    TARGET: x86_64-linux-gnu

build_py36_x86_64_linux: 
  <<: *build
  image: python:3.6
  variables:
    TARGET: x86_64-linux-gnu
    
build_py37_x86_64_linux64: 
  <<: *build
  image: python:3.7
  variables:
    TARGET: x86_64-linux-gnu
    
build_py2_win32:
  <<: *build
  image: python:2
  variables:
    CXXFLAGS: -D__MINGW64__
    LDFLAGS: -static-libgcc -static-libstdc++
    TARGET: i686-w64-mingw32
  allow_failure: true

build_py35_win32:
  <<: *build
  image: python:3.5
  variables:
    CXXFLAGS: -D__MINGW64__
    LDFLAGS: -static-libgcc -static-libstdc++
    TARGET: i686-w64-mingw32
  allow_failure: true
    
build_py2_win64:
  <<: *build
  image: python:2
  variables:
    LDFLAGS: -static-libgcc -static-libstdc++
    TARGET: x86_64-w64-mingw32
  allow_failure: true

build_py35_win64:
  <<: *build
  image: python:3.5
  variables:
    LDFLAGS: -static-libgcc -static-libstdc++
    TARGET: x86_64-w64-mingw32
  allow_failure: true

#
# Publish
#

publish_nexus:
  stage: publish
  image: python:3
  script:
  - pip install twine --upgrade
  - python setup.py sdist
  - twine upload dist/* -u $NEXUS_USR -p $NEXUS_PWD --repository-url $NEXUS_PYPI_URL

publish_pypi:
  stage: publish
  image: python:3
  only:
  - tags
  script:
  - pip3 install twine --upgrade
  - python setup.py sdist
  - twine upload dist/* -u $PYPI_USR -p $PYPI_PWD
  